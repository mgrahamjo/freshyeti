{"css-only-hamburger-menu":{"title":"My zero JavaScript hamburger menu","body":"<p>Perhaps it&apos;s odd to write about how to do something without JavaScript on a JavaScript blog. Here&apos;s my rationale: a good JS developer writes as little JS as possible. So being able to code interactions with zero JavaScript is the jackpot, right?</p>\r\n<p>Anyway, here&apos;s how the menu button on this page works with CSS only. The key is to use a checkbox and hook into the <code>:checked</code> pseudo-element to style the visible state.</p>\r\n<p>Here&apos;s the markup:</p>\r\n<pre><code class=&quot;language-html&quot;>&lt;input type=&quot;checkbox&quot; class=&quot;menu-toggle&quot;>\r\n&lt;div class=&quot;nav&quot;>\r\n  &lt;a href=&quot;/&quot;>Home&lt;/a>\r\n  &lt;a href=&quot;/blog&quot;>Blog&lt;/a>\r\n  &lt;a href=&quot;https://github.com/mgrahamjo&quot; target=&quot;_blank&quot;>Github&lt;/a>\r\n  &lt;a href=&quot;https://www.npmjs.com/~mgrahamjo&quot; target=&quot;_blank&quot;>NPM&lt;/a>\r\n&lt;/div>\r\n&lt;div class=&quot;menu&quot;>\r\n    &lt;div class=&quot;bar&quot;>&lt;/div>\r\n    &lt;div class=&quot;bar&quot;>&lt;/div>\r\n    &lt;div class=&quot;bar&quot;>&lt;/div>\r\n&lt;/div>\r\n</code></pre><p>Already you can see how this will work. The checkbox is styled to be invisble, positioned behind the menu button. Once you click on it, that&apos;s where it gets tricky, because I want you to be able to click anything on the page (except for one of the nav links) to close the menu. The trick there is to make the checkbox cover the entire page, and use <code>pointer-events</code> to control what can be clicked. Here&apos;s the CSS - yeah, there&apos;s kind of a lot:</p>\r\n<pre><code class=&quot;language-css&quot;>.menu-toggle {\r\n    position: fixed;\r\n    z-index: 2;\r\n    top: 20px;\r\n    left: 20px;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 27px;\r\n    appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-appearance: none;\r\n    border: none;\r\n    border-radius: 0;\r\n    height: 20px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    background: none;\r\n}\r\n\r\n.menu {\r\n    width: 27px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 20px 0 0 20px;\r\n    z-index: 2;\r\n    pointer-events: none;\r\n}\r\n\r\n.menu .bar {\r\n    background-color: #F9F9F9;\r\n    height: 4px;\r\n    margin-bottom: 4px;\r\n        /* this shadow makes the menu button look good on both dark and light backgrounds, but it might look funky if your site&apos;s background is in-between */\r\n    box-shadow: 0px 4px 0px rgba(0,0,0,.15);\r\n    -moz-box-shadow: 0px 4px 0px rgba(0,0,0,.15);\r\n    -webkit-box-shadow: 0px 4px 0px rgba(0,0,0,.15);\r\n}\r\n\r\n.nav {\r\n    font-size: 10pt;\r\n    pointer-events: none;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: all 0.3s;\r\n    background-color: rgba(0,0,0,.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    padding-top: 50px;\r\n    height: 100%;\r\n    z-index: 2;\r\n    width: 15%;\r\n    min-width: 101px;\r\n}\r\n\r\n.nav a {\r\n    pointer-events: auto;\r\n    display: block;\r\n    color: white;\r\n    line-height: 34px;\r\n    padding: 0 25px 0 20px;\r\n    visibility: visible;\r\n}\r\n\r\n.nav a:hover {\r\n    color: #DEDEDE;\r\n}\r\n\r\n.menu-toggle:checked {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.menu-toggle:checked + .nav {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n</code></pre>","date":"Mon Dec 07 2015","live":"on"}}